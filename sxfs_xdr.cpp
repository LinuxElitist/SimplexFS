/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#include "sxfs.h"

bool_t
xdr_IP (XDR *xdrs, IP *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, objp, MAXIP))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_client_file_list (XDR *xdrs, client_file_list *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, objp, MAXFILELIST))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_node (XDR *xdrs, node *objp)
{
	register int32_t *buf;

	 if (!xdr_IP (xdrs, &objp->ip))
		 return FALSE;
	 if (!xdr_int (xdrs, &objp->port))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_node_list (XDR *xdrs, node_list *objp)
{
	register int32_t *buf;

	 if (!xdr_array (xdrs, (char **)&objp->node_list_val, (u_int *) &objp->node_list_len, MAXCLIENTS,
		sizeof (node), (xdrproc_t) xdr_node))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_client_details (XDR *xdrs, client_details *objp)
{
	register int32_t *buf;

	 if (!xdr_node (xdrs, &objp->client_node))
		 return FALSE;
	 if (!xdr_client_file_list (xdrs, &objp->c_file_list))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_client_list (XDR *xdrs, client_list *objp)
{
	register int32_t *buf;

	 if (!xdr_array (xdrs, (char **)&objp->client_list_val, (u_int *) &objp->client_list_len, MAXCLIENTS,
		sizeof (client_details), (xdrproc_t) xdr_client_details))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_update_list_1_argument (XDR *xdrs, update_list_1_argument *objp)
{
	 if (!xdr_IP (xdrs, &objp->arg1))
		 return FALSE;
	 if (!xdr_int (xdrs, &objp->arg2))
		 return FALSE;
	 if (!xdr_client_file_list (xdrs, &objp->arg3))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_remove_client_1_argument (XDR *xdrs, remove_client_1_argument *objp)
{
	 if (!xdr_IP (xdrs, &objp->arg1))
		 return FALSE;
	 if (!xdr_int (xdrs, &objp->arg2))
		 return FALSE;
	return TRUE;
}
