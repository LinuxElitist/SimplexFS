/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SXFS_H_RPCGEN
#define _SXFS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXIP 21
#define MAXCLIENTS 4
#define MAXFILENAME 256
#define MAXFILES 30
#define MAXFILELIST 7680

typedef char *IP;

typedef char *client_file_list;

void ping();

struct node {
	IP ip;
	int port;
};
typedef struct node node;

typedef struct {
	u_int node_list_len;
	node *node_list_val;
} node_list;

struct client_details {
	node client_node;
	client_file_list c_file_list;
};
typedef struct client_details client_details;

typedef struct {
	u_int client_list_len;
	client_details *client_list_val;
} client_list;

struct update_list_1_argument {
	IP arg1;
	int arg2;
	client_file_list arg3;
	int arg4;
};
typedef struct update_list_1_argument update_list_1_argument;

struct remove_client_1_argument {
	IP arg1;
	int arg2;
};
typedef struct remove_client_1_argument remove_client_1_argument;

#define SIMPLE_XFS 0x22221122
#define SIMPLE_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define FILE_FIND 1
extern  node_list * file_find_1(char *, CLIENT *);
extern  node_list * file_find_1_svc(char *, struct svc_req *);
#define UPDATE_LIST 2
extern  int * update_list_1(IP , int , client_file_list , int , CLIENT *);
extern  int * update_list_1_svc(IP , int , client_file_list , int , struct svc_req *);
#define REMOVE_CLIENT 3
extern  int * remove_client_1(IP , int , CLIENT *);
extern  int * remove_client_1_svc(IP , int , struct svc_req *);
extern int simple_xfs_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define FILE_FIND 1
extern  node_list * file_find_1();
extern  node_list * file_find_1_svc();
#define UPDATE_LIST 2
extern  int * update_list_1();
extern  int * update_list_1_svc();
#define REMOVE_CLIENT 3
extern  int * remove_client_1();
extern  int * remove_client_1_svc();
extern int simple_xfs_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_IP (XDR *, IP*);
extern  bool_t xdr_client_file_list (XDR *, client_file_list*);
extern  bool_t xdr_node (XDR *, node*);
extern  bool_t xdr_node_list (XDR *, node_list*);
extern  bool_t xdr_client_details (XDR *, client_details*);
extern  bool_t xdr_client_list (XDR *, client_list*);
extern  bool_t xdr_update_list_1_argument (XDR *, update_list_1_argument*);
extern  bool_t xdr_remove_client_1_argument (XDR *, remove_client_1_argument*);

#else /* K&R C */
extern bool_t xdr_IP ();
extern bool_t xdr_client_file_list ();
extern bool_t xdr_node ();
extern bool_t xdr_node_list ();
extern bool_t xdr_client_details ();
extern bool_t xdr_client_list ();
extern bool_t xdr_update_list_1_argument ();
extern bool_t xdr_remove_client_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SXFS_H_RPCGEN */
